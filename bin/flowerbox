#!/usr/bin/env ruby

require 'flowerbox'
require 'thor'

class Flowerbox::CLI < Thor
  include Thor::Actions

  desc "test", "Run the specs found in spec dir, loading spec_helper.rb for configuration details"
  method_options :pwd => :string, :env_options => nil, :runners => :string, :runner => :string, :verbose_server => false
  def test(dir = "spec/javascripts", *files)
    Dir.chdir(pwd) do
      result = Flowerbox.run(dir, options.dup.merge(:files => files))
      Flowerbox.cleanup!
      exit result
    end
  end

  desc "debug DIR", "Start the Flowerbox server to help debug loading issues."
  method_options :pwd => :string, :env_options => nil, :runners => :string, :runner => :string, :verbose_server => false
  def debug(dir = "spec/javascripts")
    Dir.chdir(pwd) do
      Flowerbox.debug(dir, options.dup)
    end
  end

  desc "transplant DIR", "Convert an existing Jasmine gem-style project to Flowerbox"
  def transplant(dir)
    Flowerbox.transplant(dir)
  end

  desc "clean", "Clean the Sprockets cache"
  def clean
    FileUtils.rm_rf(Flowerbox::CACHE_DIR)
    puts "Sprockets cache cleaned."
  end

  desc "plant", "Start a new Flowerbox project"
  def plant(type, dir = nil)
    env = Flowerbox::TestEnvironment.for(type)

    self.class.source_root(Flowerbox.path.join(env.plant_source))

    directory('.', dir || env.plant_target)
  end

  default_task :test

  no_tasks do
    def pwd
      options[:pwd] || Dir.pwd
    end

    def asset_paths
      Flowerbox.asset_paths.collect { |path| File.join(pwd, path) }
    end
  end
end

Flowerbox::CLI.start

